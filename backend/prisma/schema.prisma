generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model chats {
  id            String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  tenant_id     String
  landlord_id   String
  property_id   String
  created_at    DateTime   @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  tenant_name   String?
  property_name String?
  landlord_name String?
  messages      messages[]
}

model landlord_profiles {
  id         String     @id @db.Uuid
  full_name  String
  email      String
  phone      String?
  image_url  String?
  address    String?
  documents  String[]   @default([])
  created_at DateTime   @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  updated_at DateTime   @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  listings   listings[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model listings {
  id                BigInt             @id @default(autoincrement())
  created_at        DateTime           @default(now()) @db.Timestamptz(6)
  landlord_id       String?            @db.Uuid
  tenant_id         String?            @db.Uuid
  title             String?
  type              String?            @db.VarChar
  address           String?
  city              String?
  state             String?
  zip_code          String?            @db.VarChar
  bedrooms          Int?               @db.SmallInt
  bathrooms         Int?               @db.SmallInt
  area              Float?
  price             Float?
  description       String?
  lease_type        String?            @db.VarChar
  amenities         String[]
  requirements      String?
  house_rules       String?
  images            String?
  landlord_name     String?
  landlord_phone    String?            @db.VarChar
  coordinates       String?
  available         Boolean?
  landlord_profiles landlord_profiles? @relation(fields: [landlord_id], references: [id], onDelete: Cascade)
  tenant_profiles   tenant_profiles?   @relation(fields: [tenant_id], references: [id], onDelete: SetDefault)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model messages {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  chat_id     String   @db.Uuid
  sender_id   String
  content     String
  sender_type String
  created_at  DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  chats       chats    @relation(fields: [chat_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model tenant_profiles {
  id         String     @id @db.Uuid
  full_name  String
  email      String
  phone      String?
  image_url  String?
  address    String?
  created_at DateTime   @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  updated_at DateTime   @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  listings   listings[]
}

model payment_requests {
  id       Int      @id @default(autoincrement())
  tenantId String
  amount   Float
  date     DateTime @default(now())
  status   String
  proofUrl String?
}
