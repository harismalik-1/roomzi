version: '3.8'

services:
  backend:
    build:
      context: ..
      dockerfile: CICD/Dockerfile.backend
    container_name: driven-devs-backend
    ports:
      - "3001:3001"
    env_file:
      - ../backend/.env
    volumes:
      - backend_uploads:/app/uploads
    restart: unless-stopped
    networks:
      - driven-devs-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  frontend:
    build:
      context: ..
      dockerfile: CICD/Dockerfile.frontend
    container_name: driven-devs-frontend
    ports:
      - "80:80"
    env_file:
      - ../frontend/.env
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - driven-devs-network
    healthcheck:
      test: ["CMD", "sh", "-c", "if [ -f /usr/share/nginx/html/index.html ]; then exit 0; else exit 1; fi"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

volumes:
  backend_uploads:
    driver: local

networks:
  driven-devs-network:
    driver: bridge 